/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package takompresi;

import java.io.PrintStream;
import java.io.UnsupportedEncodingException;
import java.util.PriorityQueue;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map.Entry;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.zip.Deflater;
import static takompresi.LZW.compress;
import javax.swing.ImageIcon;
/**
 *
 * @author Mbah Syahrul
 */
public class menuutama extends javax.swing.JFrame {

    /**
     * Creates new form menuutama
     */
    public menuutama() {
        
        initComponents();
        ImageIcon icon = new ImageIcon("src/takompresi/apple-touch-icon.png");
setIconImage(icon.getImage());
    }

    
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel6 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        hasilhufman = new javax.swing.JTextArea();
        txthufman = new javax.swing.JTextField();
        cmdhufman = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        inpsan = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        cmdsan = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        outsan = new javax.swing.JTextArea();
        jButton2 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        inprun = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        cmdrun = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        outrun = new javax.swing.JTextArea();
        jButton3 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        inpdef = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        cmddef = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        outdef = new javax.swing.JTextArea();
        jButton4 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        inplzw = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        cmdslzw = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        outlzw = new javax.swing.JTextArea();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("APLIKASI KOMPRESI 201951226");
        setBackground(new java.awt.Color(0, 6, 87));
        setResizable(false);

        jPanel6.setBackground(new java.awt.Color(2, 7, 67));
        jPanel6.setMinimumSize(new java.awt.Dimension(200, 200));

        jTabbedPane1.setBackground(java.awt.Color.darkGray);
        jTabbedPane1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jTabbedPane1.setFont(new java.awt.Font("Garamond", 0, 12)); // NOI18N

        jPanel1.setBackground(new java.awt.Color(63, 1, 32));

        jLabel1.setBackground(java.awt.Color.darkGray);
        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 11)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Karakter");

        hasilhufman.setEditable(false);
        hasilhufman.setBackground(java.awt.Color.darkGray);
        hasilhufman.setColumns(20);
        hasilhufman.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        hasilhufman.setForeground(new java.awt.Color(255, 255, 255));
        hasilhufman.setRows(5);
        jScrollPane1.setViewportView(hasilhufman);

        txthufman.setBackground(java.awt.Color.darkGray);
        txthufman.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txthufman.setForeground(new java.awt.Color(255, 255, 255));
        txthufman.setPreferredSize(new java.awt.Dimension(5, 19));

        cmdhufman.setBackground(new java.awt.Color(102, 0, 0));
        cmdhufman.setFont(new java.awt.Font("Times New Roman", 1, 11)); // NOI18N
        cmdhufman.setForeground(new java.awt.Color(255, 255, 255));
        cmdhufman.setIcon(new javax.swing.ImageIcon(getClass().getResource("/takompresi/icon/button3.png"))); // NOI18N
        cmdhufman.setContentAreaFilled(false);
        cmdhufman.setPreferredSize(new java.awt.Dimension(125, 35));
        cmdhufman.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdhufmanActionPerformed(evt);
            }
        });

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/takompresi/icon/button4.png"))); // NOI18N
        jButton1.setContentAreaFilled(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(txthufman, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(cmdhufman, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1)
                        .addGap(0, 273, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jLabel1)
                        .addGap(29, 29, 29))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(cmdhufman, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txthufman, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 322, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("HUFFMAN", null, jPanel1, "");

        jPanel3.setBackground(new java.awt.Color(63, 1, 32));

        inpsan.setBackground(java.awt.Color.darkGray);
        inpsan.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        inpsan.setForeground(new java.awt.Color(255, 255, 255));

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 11)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Karakter");

        cmdsan.setBackground(new java.awt.Color(102, 0, 0));
        cmdsan.setFont(new java.awt.Font("Garamond", 1, 11)); // NOI18N
        cmdsan.setForeground(new java.awt.Color(255, 255, 255));
        cmdsan.setIcon(new javax.swing.ImageIcon(getClass().getResource("/takompresi/icon/button3.png"))); // NOI18N
        cmdsan.setContentAreaFilled(false);
        cmdsan.setPreferredSize(new java.awt.Dimension(125, 35));
        cmdsan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdsanActionPerformed(evt);
            }
        });

        outsan.setEditable(false);
        outsan.setBackground(java.awt.Color.darkGray);
        outsan.setColumns(20);
        outsan.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        outsan.setForeground(new java.awt.Color(255, 255, 255));
        outsan.setRows(5);
        jScrollPane3.setViewportView(outsan);

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/takompresi/icon/button4.png"))); // NOI18N
        jButton2.setContentAreaFilled(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(inpsan, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(cmdsan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2)
                        .addGap(0, 273, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jLabel3)
                        .addGap(29, 29, 29))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(cmdsan, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(inpsan, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel3Layout.createSequentialGroup()
                                    .addContainerGap()
                                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(18, 18, 18)))
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 322, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("SHANNON FANO", jPanel3);

        jPanel2.setBackground(new java.awt.Color(63, 1, 32));

        inprun.setBackground(java.awt.Color.darkGray);
        inprun.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        inprun.setForeground(new java.awt.Color(255, 255, 255));

        jLabel2.setBackground(java.awt.Color.darkGray);
        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 11)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Karakter");

        cmdrun.setBackground(new java.awt.Color(102, 0, 0));
        cmdrun.setFont(new java.awt.Font("Garamond", 1, 11)); // NOI18N
        cmdrun.setForeground(new java.awt.Color(255, 255, 255));
        cmdrun.setIcon(new javax.swing.ImageIcon(getClass().getResource("/takompresi/icon/button3.png"))); // NOI18N
        cmdrun.setContentAreaFilled(false);
        cmdrun.setPreferredSize(new java.awt.Dimension(125, 35));
        cmdrun.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdrunActionPerformed(evt);
            }
        });

        outrun.setEditable(false);
        outrun.setBackground(java.awt.Color.darkGray);
        outrun.setColumns(20);
        outrun.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        outrun.setForeground(new java.awt.Color(255, 255, 255));
        outrun.setRows(5);
        jScrollPane2.setViewportView(outrun);

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/takompresi/icon/button4.png"))); // NOI18N
        jButton3.setContentAreaFilled(false);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(inprun, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39)
                        .addComponent(cmdrun, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton3)
                        .addGap(0, 252, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(inprun, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2))
                    .addComponent(cmdrun, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 322, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("RUN LENGTH", jPanel2);

        jPanel5.setBackground(new java.awt.Color(63, 1, 32));

        inpdef.setBackground(java.awt.Color.darkGray);
        inpdef.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        inpdef.setForeground(new java.awt.Color(255, 255, 255));
        inpdef.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inpdefActionPerformed(evt);
            }
        });

        jLabel7.setBackground(java.awt.Color.darkGray);
        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 11)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Karakter");

        cmddef.setBackground(new java.awt.Color(102, 0, 0));
        cmddef.setFont(new java.awt.Font("Garamond", 1, 11)); // NOI18N
        cmddef.setForeground(new java.awt.Color(255, 255, 255));
        cmddef.setIcon(new javax.swing.ImageIcon(getClass().getResource("/takompresi/icon/button3.png"))); // NOI18N
        cmddef.setContentAreaFilled(false);
        cmddef.setPreferredSize(new java.awt.Dimension(125, 35));
        cmddef.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmddefActionPerformed(evt);
            }
        });

        outdef.setEditable(false);
        outdef.setBackground(java.awt.Color.darkGray);
        outdef.setColumns(20);
        outdef.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        outdef.setForeground(new java.awt.Color(255, 255, 255));
        outdef.setRows(5);
        jScrollPane5.setViewportView(outdef);

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/takompresi/icon/button4.png"))); // NOI18N
        jButton4.setContentAreaFilled(false);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(18, 18, 18)
                        .addComponent(inpdef, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39)
                        .addComponent(cmddef, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton4)
                        .addGap(0, 252, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(inpdef, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel7))
                    .addComponent(cmddef, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 322, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("DEFLATE", jPanel5);

        jPanel4.setBackground(new java.awt.Color(51, 255, 51));

        inplzw.setBackground(java.awt.Color.darkGray);
        inplzw.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        inplzw.setForeground(new java.awt.Color(255, 255, 255));

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 11)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Karakter");

        cmdslzw.setBackground(new java.awt.Color(102, 0, 0));
        cmdslzw.setFont(new java.awt.Font("Garamond", 1, 11)); // NOI18N
        cmdslzw.setForeground(new java.awt.Color(255, 255, 255));
        cmdslzw.setIcon(new javax.swing.ImageIcon(getClass().getResource("/takompresi/icon/button3.png"))); // NOI18N
        cmdslzw.setContentAreaFilled(false);
        cmdslzw.setPreferredSize(new java.awt.Dimension(125, 35));
        cmdslzw.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdslzwActionPerformed(evt);
            }
        });

        outlzw.setEditable(false);
        outlzw.setBackground(java.awt.Color.darkGray);
        outlzw.setColumns(20);
        outlzw.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        outlzw.setForeground(new java.awt.Color(255, 255, 255));
        outlzw.setRows(5);
        jScrollPane4.setViewportView(outlzw);

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/takompresi/icon/button4.png"))); // NOI18N
        jButton5.setContentAreaFilled(false);
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/takompresi/icon/button3.png"))); // NOI18N
        jButton6.setContentAreaFilled(false);
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(inplzw, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39)
                        .addComponent(cmdslzw, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton5)
                        .addGap(30, 30, 30)
                        .addComponent(jButton6)
                        .addGap(0, 79, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmdslzw, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(inplzw, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4))
                    .addComponent(jButton6))
                .addGap(26, 26, 26)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 314, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("LZW", jPanel4);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jTabbedPane1))
        );

        jLabel5.setBackground(new java.awt.Color(0, 10, 79));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/takompresi/icon/5238994322.png"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    public static HuffmanTree buildTree(int[] charFreqs){
        PriorityQueue<HuffmanTree> trees = new PriorityQueue<HuffmanTree>();
        
        for (int i = 0; i < charFreqs.length; i++) {
            if (charFreqs[i] > 0) {
             trees.offer(new HuffmanLeaf((charFreqs[i]), (char) i));   
            }
        }
        
        assert trees.size() > 0;
        
        while  (trees.size() > 1){
            HuffmanTree a = trees.poll();
            HuffmanTree b = trees.poll();
            
            trees.offer(new HuffmanNode(a, b));
        }
        
        return trees.poll();
    }
    
    public void printCodes(HuffmanTree tree, StringBuffer prefix){
        assert tree != null;
        
        if(tree instanceof HuffmanLeaf){
            HuffmanLeaf leaf = (HuffmanLeaf) tree;
            
            hasilhufman.append(leaf.value + "\t" + leaf.frequency + "\t" + prefix + "\n");
        }else if(tree instanceof HuffmanNode){
            HuffmanNode node = (HuffmanNode) tree;
            
            prefix.append('0');
            printCodes(node.left, prefix);
            prefix.deleteCharAt(prefix.length() - 1);
            
            prefix.append('1');
            printCodes(node.right, prefix);
            prefix.deleteCharAt(prefix.length() - 1);
        }
    }
    
 
    private void cmdhufmanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdhufmanActionPerformed
        // TODO add your handling code here:
        hasilhufman.setText("");  //HUFFMAN
        String test = txthufman.getText();
        int[] charFreqs = new int[256];
        
        for (char c : test.toCharArray()){
            charFreqs[c] = charFreqs[c] + 1;
        }
        
        HuffmanTree tree = buildTree(charFreqs);
        hasilhufman.append("SYMBOL   |   WEIGHT  |   HUFFMAN CODE \n");
        printCodes(tree, new StringBuffer());
    }//GEN-LAST:event_cmdhufmanActionPerformed
   //RUNLEGHT
     public static String printRIE (String str)
    {
        StringBuffer dest = new StringBuffer();
        int n = str.length();
        for (int i = 0; i < n; i++ ){
            int count = 1;
            while (i < n - 1 && 
                    str.charAt(i) == str.charAt(i + 1)) {
                count++;
                i++;
            }
                dest.append("  ");
                dest.append(str.charAt(i));
                dest.append(count);
            }
            return dest.toString();
        }
    private void cmdrunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdrunActionPerformed
        // TODO add your handling code here:
        String runleght = inprun.getText();
        outrun.setText(printRIE(runleght));
    }//GEN-LAST:event_cmdrunActionPerformed

//shanon
 public class shannon {
    private static final int ASCII_LENGTH = 7;
    
    private String originalString;
	private int originalStringLength;
	private HashMap<Character, String> compressedResult;
	private HashMap<Character, Double> characterFrequency;
	private double entropy;
	private double averageLengthBefore;
	private double averageLengthAfter;
	private boolean probabilityIsGiven;

    public shannon(String str) {
		super();
		originalString = str;
		originalStringLength = str.length();
		characterFrequency = new HashMap<Character, Double>();
		compressedResult = new HashMap<Character, String>();
		entropy = 0.0;
		averageLengthBefore = 0.0;
		averageLengthAfter = 0.0;
		probabilityIsGiven = false;
                
                this.calculateFrequency();
		this.compressString();
		this.calculateEntropy();
		this.calculateAverageLengthBeforeCompression();
		this.calculateAverageLengthAfterCompression();
    }
    
    public shannon(String str, HashMap<Character, Double> probablity) {
        super();
		originalString = str;
		originalStringLength = str.length();
                
                characterFrequency = new HashMap<Character, Double>();
                double checkPoint = 0;
		for (Character c : originalString.toCharArray()) {
			checkPoint += probablity.get(c);
			characterFrequency.put(c, originalStringLength * probablity.get(c));
                }
                
                assert checkPoint == 1.0;
                compressedResult = new HashMap<Character, String>();
		entropy = 0.0;
		averageLengthBefore = 0.0;
		averageLengthAfter = 0.0;
		probabilityIsGiven = true;
                
                this.compressString();
		this.calculateEntropy();
		this.calculateAverageLengthBeforeCompression();
		this.calculateAverageLengthAfterCompression();

    }
    
    private void compressString() {
        List<Character> charList = new ArrayList<Character>();
        Iterator<Entry<Character, Double>> entries = characterFrequency.entrySet().iterator();
	while (entries.hasNext()) {
            Entry<Character, Double> entry = entries.next();
            charList.add(entry.getKey());
        }
        appendBit(compressedResult, charList, true);
    }
    
    private void appendBit(HashMap<Character, String> result, List<Character> charList, boolean up) {
        String bit = "";
		if (!result.isEmpty()) {
                    bit = (up) ? "0" : "1";
                }
                for (Character c : charList) {
			String s = (result.get(c) == null) ? "" : result.get(c);
			result.put(c, s + bit);
                }
                if (charList.size() >= 2) {
			int separator = (int) Math.floor((float) charList.size() / 2.0);

			List<Character> upList = charList.subList(0, separator);
			appendBit(result, upList, true);
			List<Character> downList = charList.subList(separator, charList.size());
			appendBit(result, downList, false);
                }
    }
    
    private void calculateFrequency() {
        for (Character c : originalString.toCharArray()) {
			if (characterFrequency.containsKey(c)) {
				characterFrequency.put(c, new Double(characterFrequency.get(c) + 1.0));
                        } else{
                            characterFrequency.put(c, 1.0);
                        }
                }
    }
    
    private void calculateEntropy() {
        double probability = 0.0;
		for (Character c : originalString.toCharArray()) {
			probability = 1.0 * characterFrequency.get(c) / originalStringLength;
			entropy += probability * (Math.log(1.0 / probability) / Math.log(2));
                }
    }
    
    private void calculateAverageLengthBeforeCompression() {
        double probability = 0.0;
		for (Character c : originalString.toCharArray()) {
			probability = 1.0 * characterFrequency.get(c) / originalStringLength;
			averageLengthBefore += probability * ASCII_LENGTH;
                }
    }
    
    private void calculateAverageLengthAfterCompression() {
        double probability = 0.0;
		for (Character c : originalString.toCharArray()) {
			probability = 1.0 * characterFrequency.get(c) / originalStringLength;
			averageLengthAfter += probability * compressedResult.get(c).length();
                }
    }
    
    @SuppressWarnings("unchecked")
    public HashMap<Character, String> getCompressedResult() {
		return (HashMap<Character, String>) compressedResult.clone();
    }
    
    @Override
    
    public String toString() {
     String str = "";
		str += "*** Probability is" + (probabilityIsGiven ? " " : " Not ") + "Given. "
				+ (probabilityIsGiven ? "We did not calculate the probability."
						: "Probability was calculated using frequency of each character in the given String.")+ "\n";
		str += "Original String: \"" + originalString + "\"\n";
		str += "------------------------------------------------------------------------\n";
		str += "Symbol\t\tFrequency\tProbability\tShannon-F Code\tASCII Code\n";
		str += "------------------------------------------------------------------------\n";
                for (Character c : compressedResult.keySet()) {
			str += "'" + c + "'" + "\t\t" + Math.round(characterFrequency.get(c) * 100.0) / 100.0 + "\t\t"
					+ Math.round(characterFrequency.get(c) / originalStringLength * 10000.0) / 10000.0 + "\t\t"
					+ compressedResult.get(c) + "\t\t" + Integer.toBinaryString((int) c);
                        str += "\n";
                }
                str += "------------------------------------------------------------------------\n";
		str += "Efficiency before Compression: " + 100 * (Math.round((entropy / averageLengthBefore) * 100.0) / 100.0)
				+ "%\n";
		str += "Efficiency after Compression: " + 100 * (Math.round((entropy / averageLengthAfter) * 100.0) / 100.0)
				+ "%\n";
		str += "------------------------------------------------------------------------\n";
		return str;

    }   
 }
    private void cmdsanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdsanActionPerformed
        // TODO add your handling code here:
        outsan.setText(" ");
        PrintStream out = new PrintStream(new TextAreaOutputStream(outsan));
        shannon sfc = new shannon(inpsan.getText());
        
        System.setOut(out);
        System.setErr(out);
        System.out.print(sfc);
    }//GEN-LAST:event_cmdsanActionPerformed

    private void cmdslzwActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdslzwActionPerformed
        // TODO add your handling code here:
        List<Integer> compressed = compress(inplzw.getText());
        String kompres = String.valueOf(compressed);
        outlzw.setText(kompres);
    }//GEN-LAST:event_cmdslzwActionPerformed

    private void cmddefActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmddefActionPerformed
        // TODO add your handling code here:
        try {
             String massage = inpdef.getText();
            byte [] input = massage.getBytes("UTF-8");
            
            //COMPRESS THE BYTE
            byte[] output = new byte[1024];
            Deflater deflater = new Deflater();
            deflater.setInput(input);
            deflater.finish();
            int compresseedDataLenght = deflater.deflate(output);
            deflater.end();
            
            outdef.setText("Ukuran Text Sebelum di Kompresi : " + massage.length() +"\n" +
                           "-----------------------------------------------------" + "\n" +
                           "Text telah di Kompresi : " + new String(output)+"\n"+ " Ukuran Text Setelah di Kompresi : " + compresseedDataLenght);
            
        
        } catch (UnsupportedEncodingException ex) {
            Logger.getLogger(Deflater.class.getName()).log(Level.SEVERE,null,ex);
        }
    
        }
 {
           
    }//GEN-LAST:event_cmddefActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        txthufman.setText("");
        hasilhufman.setText("");
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        inpsan.setText("");
        outsan.setText("");
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        inprun.setText("");
        outrun.setText("");
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        inpdef.setText("");
        outdef.setText("");
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        inplzw.setText("");
        outlzw.setText("");
    }//GEN-LAST:event_jButton5ActionPerformed

    private void inpdefActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inpdefActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inpdefActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton6ActionPerformed

    
 
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(menuutama.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(menuutama.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(menuutama.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(menuutama.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new menuutama().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cmddef;
    private javax.swing.JButton cmdhufman;
    private javax.swing.JButton cmdrun;
    private javax.swing.JButton cmdsan;
    private javax.swing.JButton cmdslzw;
    private javax.swing.JTextArea hasilhufman;
    private javax.swing.JTextField inpdef;
    private javax.swing.JTextField inplzw;
    private javax.swing.JTextField inprun;
    private javax.swing.JTextField inpsan;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextArea outdef;
    private javax.swing.JTextArea outlzw;
    private javax.swing.JTextArea outrun;
    private javax.swing.JTextArea outsan;
    private javax.swing.JTextField txthufman;
    // End of variables declaration//GEN-END:variables
}
